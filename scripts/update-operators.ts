import { writeFile } from 'fs/promises'
import process from 'process'

import { getOperators } from './shared'

function withGeneratedHeader(content: string) {
  return `// Generated by update-operators.ts\n// DO NOT EDIT\n${content}`
}

// at runtime, this evaluates faster than plain object
function toRuntimeJSON(o: any) {
  const str = JSON.stringify(o).replace(/\\/g, '\\\\').replace(/'/g, "\\'")
  return `JSON.parse('${str}')`
}

async function main() {
  console.info('Fetching operators...')
  const { operators, professions } = await getOperators()

  const content = withGeneratedHeader(
    `
export interface OperatorInfo {
  id: string
  name: string
  pron: string
  subProf: string
  alias: string,
  alt_name: string
}

export interface Profession {
  id: string
  name: string
  sub: SubProfession[]
}

export interface SubProfession {
  id: string
  name: string
}

export const OPERATORS: OperatorInfo[] = ${toRuntimeJSON(operators)};
export const PROFESSIONS: Profession[] = ${toRuntimeJSON(professions)};`,
  )

  console.info('Writing to operators.ts...')
  await writeFile('src/models/generated/operators.ts', content)
}

main()
  .then(() => {
    process.exit(0)
  })
  .catch((err) => {
    console.error(err)
    process.exit(1)
  })
